{"version":3,"sources":["components/LoginForm.js","components/SignupForm.js","pages/Login.js","components/CommentsForm.js","components/PostCard.js","pages/Posts.js","pages/NewPost.js","pages/Profile.js","AuthenticatedApp.js","UnauthenticatedApp.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","setUser","useState","username","setUsername","password","setPassword","isLoading","setIsLoading","onSubmit","e","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","then","res","ok","json","user","errors","console","error","htmlFor","type","id","autoComplete","value","onChange","target","variant","color","SignupForm","signup","passwordConfirmation","setPasswordConfirmation","password_confirmation","Login","showLogin","setShowLogin","formData","Promise","reject","onClick","CommentsForm","createComment","comment","setComment","likes","placeholder","PostCard","post","comments","setComments","useEffect","data","img_url","caption","className","src","alt","map","credentials","concat","Posts","renderPosts","posts","NewPost","createPost","setImg_url","setCaption","Profile","AuthenticatedApp","history","useHistory","setPosts","to","r","push","path","UnauthenticatedApp","exact","App","authChecked","setAuthChecked","onLogin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0decc375.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function LoginForm({ setUser }) {\n    // const history = useHistory()\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setIsLoading(true);\n        fetch(\"/api/login\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"*/*\",\n            },\n            body: JSON.stringify({ username, password }),\n        }).then((res) => {\n            setIsLoading(false);\n            if (res.ok) {\n                res.json().then((user) => {\n                    setUser(user)\n                    // history.push('/explore')\n                })\n            } else {\n                res.json().then(errors => {\n                    console.error(errors)\n                })\n            }\n        })\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2 htmlFor=\"username\">Username</h2>\n            <input\n                type=\"text\"\n                id=\"username\"\n                autoComplete=\"off\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n            />\n            <h2 htmlFor=\"password\">Password</h2>\n            <input\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            <button variant=\"fill\" color=\"primary\" type=\"submit\" >\n                {isLoading ? \"Loading...\" : \"Login\"}\n            </button>\n        </form>\n    )\n}","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function SignupForm({ signup }) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordConfirmation, setPasswordConfirmation] = useState('');\n    // const [isLoading, setIsLoading] = useState(false);\n    // const history = useHistory()\n    \n    function handleSubmit(e) {\n        e.preventDefault()\n        signup({\n            username,\n            password,\n            password_confirmation: passwordConfirmation,\n        })\n        setUsername('')\n        setPassword('')\n        setPasswordConfirmation('')\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2 htmlFor=\"username\">Username</h2>\n            <input\n                type=\"text\"\n                id=\"username\"\n                // autoComplete=\"off\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n            />\n            <h2 htmlFor=\"password\">Password</h2>\n            <input\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                // autoComplete=\"current-password\"\n            />\n            <h2 htmlFor=\"password\">Confrim Password</h2>\n            <input\n                type=\"password\"\n                id=\"password_confirmation\"\n                value={passwordConfirmation}\n                onChange={(e) => setPasswordConfirmation(e.target.value)}\n                // autoComplete=\"current-password\"\n            />\n            <button type=\"submit\" >\n                {/* {isLoading ? \"Loading...\" : \"Sign Up\"} */}\n                Sign Up\n            </button>\n        </form>\n    )\n}","import { useState } from \"react\"\nimport LoginForm from '../components/LoginForm'\nimport SignupForm from '../components/SignupForm'\n\nexport default function Login({ setUser }) {\n    const [showLogin, setShowLogin] = useState(true);\n\n    const signup = (formData) => {\n        fetch(\"/api/signup\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"*/*\",\n            },\n            body: JSON.stringify(formData),\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json()\n                        .then((user) => {\n                            setUser(user)\n                        })\n                } else {\n                    return res.json().then(errors => Promise.reject(errors))\n                    }\n                }\n            )\n    }\n\n    return (\n        <div>\n            <h1>Login or Sign Up</h1>\n            {showLogin ? (\n                <>\n                    <LoginForm signup={signup} setUser={setUser} />\n                    <br />\n                    <p>\n                        Don't have an account? &nbsp;\n                        <button color=\"secondary\" onClick={() => setShowLogin(false)}>\n                            Sign Up\n                        </button>\n                    </p>\n                </>\n            ) : (\n                <>\n                    <SignupForm setUser={setUser} />\n                    <br />\n                    <p>\n                        Already have an account? &nbsp;\n                        <button color=\"secondary\" onClick={() => setShowLogin(true)}>\n                            Log In\n                        </button>\n                    </p>\n                </>\n            )}\n        </div>\n    )\n}\n","import { useState } from \"react\"\n\nexport default function CommentsForm({ createComment }) {\n    const [comment, setComment] = useState('');\n    \n    function handleSubmit(e) {\n        e.preventDefault()\n        createComment({\n            comment,\n            likes: 0,\n        })\n        setComment('')\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                id=\"comment\"\n                placeholder=\"Add comment...\"\n                value={comment}\n                onChange={(e) => setComment(e.target.value)}\n            />\n            <button>Post</button>\n        </form>\n    )\n}","import { useEffect, useState } from \"react\";\nimport CommentsForm from \"./CommentsForm\";\n\nexport default function PostCard({ post }) {\n    const [comments, setComments] = useState([]);\n    const [updateLike, setUpdateLikes] = useState(0);\n\n    useEffect(() => {\n        fetch(\"/api/comments\")\n            .then(res => res.json())\n            .then(data => setComments(data))\n    })\n\n    // function updateLikes(e) {\n    //     e.preventDefault()\n\n    //     fetch(\"/api/posts/:id/likes\", {\n    //         method: \"PATCH\",\n    //         headers: {\n    //             Accept: '*/*',\n    //             \"Content-Type\": \"application/json\"\n    //         },\n    //         body: JSON.stringify()\n    //     })\n    //     .then(res => res.json())\n    //     .then(data => setUpdateLikes(data))\n    // }\n\n    const createComment = (formData) => {\n        return fetch(\"/api/comments\", {\n            method: \"POST\",\n            headers: {\n                Accept: '*/*',\n                \"Content-Type\": \"application/json\"\n            },\n            credentials: 'include',\n            body: JSON.stringify(formData)\n        })\n        .then(res => {\n            if (res.ok) {\n                return res.json()\n            } else {\n                return res.json().then(errors => Promise.reject(errors))\n            }\n        })\n        .then(comment => {\n            setComments(comments.concat(comment))\n        })\n    }\n\n    const {\n        id,\n        img_url,\n        caption,\n        likes\n    } = post\n\n    return (\n        <div key={id} className=\"post-card\">\n            <strong>username</strong>\n            <img src={img_url} alt={caption} />\n            <strong>{caption}</strong>\n            <button>❤</button>Likes: {likes}\n            <div>\n                {comments.map(comment => (\n                    <div>\n                        <ul key={comment.id}>\n                            <h3>{comment.comment}</h3>\n                            <button>❤</button>Likes: {likes}\n                        </ul>\n                    </div>\n                ))}\n            </div>\n            <CommentsForm createComment={createComment}/>\n        </div>\n    )\n}","import { useEffect, useState } from \"react\";\nimport PostCard from \"../components/PostCard\"\n\nexport default function Posts({ posts }) {\n    const renderPosts = \n        posts.map((post) => (\n            <PostCard\n                key={post.id}\n                post={post}\n            />))\n\n    return (\n        <div>\n            <h2>Explore Posts</h2>\n            <ul>\n                {renderPosts}\n            </ul>\n        </div>\n    )\n}","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function NewPost({ createPost }) {\n    const [img_url, setImg_url] = useState('');\n    const [caption, setCaption] = useState('');\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        createPost({\n            img_url,\n            caption,\n            likes: 0,\n        })\n        setImg_url('')\n        setCaption('')\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2>\n                Create a New Post\n            </h2>\n            <input\n                type=\"text\"\n                id=\"img\"\n                placeholder=\"img url...\"\n                value={img_url}\n                onChange={(e) => setImg_url(e.target.value)}\n            />\n            <input\n                type=\"text\"\n                id=\"caption\"\n                placeholder=\"enter caption\"\n                value={caption}\n                onChange={(e) => setCaption(e.target.value)}\n            />\n            <button type=\"submit\">Post</button>\n        </form>\n    )\n}","export default function Profile() {\n    return (\n        <div>\n            <h2>Profile</h2>\n            <h3>\n                Your Posts\n            </h3>\n        </div>\n    )\n}","import './App.css';\nimport { useEffect, useState } from 'react';\nimport { NavLink, Switch, Route, useHistory } from \"react-router-dom\";\nimport Posts from \"./pages/Posts\";\nimport NewPost from \"./pages/NewPost\";\nimport Profile from \"./pages/Profile\";\n\nexport default function AuthenticatedApp({ user, setUser }) {\n    const history = useHistory()\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        fetch(\"/api/posts\")\n        .then(res => res.json())\n        .then(json => setPosts(json))\n    }, []);\n\n    const createPost = (formData) => {\n        return fetch(\"/api/posts\", {\n            method: \"POST\",\n            headers: {\n                Accept: '*/*',\n                \"Content-Type\": \"application/json\"\n            },\n            credentials: 'include',\n            body: JSON.stringify(formData)\n        })\n        .then(res => {\n            if (res.ok) {\n                return res.json()\n            } else {\n                return res.json().then(errors => Promise.reject(errors))\n            }\n        })\n        .then(post => {\n            setPosts(posts.concat(post))\n        })\n    }\n\n    function handleLogoutClick() {\n        fetch(\"/api/logout\", {\n            method: \"DELETE\",\n            headers: {\n                Accept: \"*/*\",\n                \"Content-type\": \"application/json\"\n            },\n        }).then((r) => {\n            if (r.ok) {\n                setUser(null)\n                history.push('/')\n            }\n        });\n    }\n\n    return (\n        <div>\n            <nav>\n                <span>\n                    <NavLink to=\"/explore\">Explore</NavLink>\n                    <NavLink to=\"/new-post\">New Post</NavLink>\n                    <NavLink to=\"/profile\">Profile</NavLink>\n                </span>\n                <span>\n                Welcome, {user.username} <button onClick={handleLogoutClick}>Logout</button>\n                </span>\n            </nav>\n            <Switch>\n                <Route path=\"/explore\">\n                    <Posts posts={posts} />\n                </Route>\n                <Route path=\"/new-post\">\n                    <NewPost createPost={createPost} />\n                </Route>\n                <Route path=\"/profile\">\n                    <Profile />\n                </Route>\n            </Switch>\n        </div>\n    )\n}","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport SignupForm from \"./components/SignupForm\";\nimport Login from \"./pages/Login\";\n\nexport default function UnauthenticatedApp({ setUser }) {\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <Login setUser={setUser} />\n            </Route>\n            <Route exact path=\"/signup\">\n                <SignupForm setUser={setUser} />\n            </Route>\n            <Redirect to=\"/\" />\n        </Switch>\n    )\n}","// import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport Login from './pages/Login';\nimport AuthenticatedApp from './AuthenticatedApp';\nimport UnauthenticatedApp from './UnauthenticatedApp';\n\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [authChecked, setAuthChecked] = useState(false);\n  \n\n  useEffect(() => {\n    fetch(\"/api/me\", {\n      credentials: 'include'\n    })\n    .then((res) => {\n      if (res.ok) {\n        res.json()\n        .then((user) => {\n          setUser(user)\n          setAuthChecked(true)})\n      } else {\n        setAuthChecked(true)\n      }\n    });\n  }, []);\n\n\n  if (!authChecked) return <Login onLogin={setUser} />;\n\n  return (\n    <>\n    <Router>\n      {user ? (\n        <AuthenticatedApp\n          setUser={setUser}\n          user={user}\n        />\n      ) : (\n        <UnauthenticatedApp\n          setUser={setUser}\n        />\n      )}\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}