{"version":3,"sources":["pages/NewPost.js","components/LoginForm.js","components/SignupForm.js","pages/Login.js","components/Navbar.js","pages/Posts.js","App.js","reportWebVitals.js","index.js"],"names":["NewPost","LoginForm","onLogin","useState","username","setUsername","password","setPassword","isLoading","setIsLoading","onClick","e","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","then","res","ok","json","user","htmlFor","type","id","autoComplete","value","onChange","target","variant","color","SignupForm","passwordConfirmation","setPasswordConfirmation","password_confirmation","Login","showLogin","setShowLogin","Navbar","to","as","Link","setUser","r","Posts","App","useEffect","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0abcba2.chunk.js","sourcesContent":["export default function NewPost() {\n    return (\n        <>\n        New Post\n        </>\n    )\n}","import { useState } from \"react\";\n\nexport default function LoginForm({ onLogin }) {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setIsLoading(true);\n        fetch(\"http://localhost:4002/login\", {\n            method: \"POST\",\n            headers: {\n                Accept: \"*/*\",\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ username, password }),\n        }).then((res) => {\n            setIsLoading(false);\n            if (res.ok) {\n                res.json().then((user) => onLogin(user));\n            }\n        });\n    }\n\n    return (\n        <form onClick={handleSubmit}>\n            <h2 htmlFor=\"username\">Username</h2>\n            <input\n                type=\"text\"\n                id=\"username\"\n                autoComplete=\"off\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n            />\n            <h2 htmlFor=\"password\">Password</h2>\n            <input\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n            />  \n            <button variant=\"fill\" color=\"primary\" type=\"submit\" >\n                {isLoading ? \"Loading...\" : \"Login\"}\n            </button>\n        </form>\n    )\n}","import { useState } from \"react\";\n\nexport default function SignupForm({ onLogin }) {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n    // const [errors, setErrors] = useState([]);\n    // const [isLoading, setIsLoading] = useState(false);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        const user = {\n            username,\n            password,\n            password_confirmation: passwordConfirmation,\n        }\n        fetch(\"/signup\", {\n            method: \"POST\",\n            headers: {\n                Accept: \"*/*\",\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(user),\n        })\n        .then((res) => {\n            if (res.ok) {\n              res.json().then((user) => onLogin(user));\n            }\n        });\n    }\n    \n\n    return (\n        <form onClick={handleSubmit}>\n            <h2 htmlFor=\"username\">Username</h2>\n            <input\n                type=\"text\"\n                id=\"username\"\n                autoComplete=\"off\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n            />\n            <h2 htmlFor=\"password\">Password</h2>\n            <input\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                autoComplete=\"current-password\"\n            />\n            <h2 htmlFor=\"password\">Confrim Password</h2>\n            <input\n                type=\"password\"\n                id=\"password_confirmation\"\n                value={passwordConfirmation}\n                onChange={(e) => setPasswordConfirmation(e.target.value)}\n                autoComplete=\"current-password\"\n            />\n            <button type=\"submit\">\n                {/* {isLoading ? \"Loading...\" : \"Sign Up\"} */}\n                Sign Up\n            </button>\n            {/* <h3>\n                {errors.map((err) => (\n                    <h3 key={err}>{err}</h3>\n                ))}\n            </h3> */}\n        </form>\n    )\n}","import { useState } from \"react\"\nimport LoginForm from '../components/LoginForm'\nimport SignupForm from '../components/SignupForm'\n\nexport default function Login({ onLogin }) {\n    const [showLogin, setShowLogin] = useState(true);\n\n    return (\n        <div>\n            <h1>Login or Sign Up</h1>\n            {showLogin ? (\n                <>\n                    <LoginForm onLogin={onLogin} />\n                    <br />\n                    <p>\n                        Don't have an account? &nbsp;\n                        <button color=\"secondary\" onClick={() => setShowLogin(false)}>\n                            Sign Up\n                        </button>\n                    </p>\n                </>\n            ) : (\n                <>\n                    <SignupForm onLogin={onLogin} />\n                    <br />\n                    <p>\n                        Already have an account? &nbsp;\n                        <button color=\"secondary\" onClick={() => setShowLogin(true)}>\n                            Log In\n                        </button>\n                    </p>\n                </>\n            )}\n        </div>\n    )\n}\n","import { Link } from \"react-router-dom\";\n\nexport default function Navbar() {\n    function handleLogoutClick({ user, setUser }) {\n        fetch(\"/logout\", { method: \"DELETE\" }).then((r) => {\n          if (r.ok) {\n            setUser(null);\n          }\n        });\n      }\n    return (\n        <>\n        Navbar\n        <Link to=\"/\">Pet Social</Link>\n        <div>\n            <button as={Link} to=\"/new\">\n                New Post\n            </button>\n            <button onClick={handleLogoutClick}>\n                Logout\n            </button>\n        </div>\n        </>\n    )\n}","export default function Posts() {\n    return (\n        <>\n        Posts\n        </>\n    )\n}","// import logo from './logo.svg';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom'\nimport { useEffect, useState } from 'react';\nimport NewPost from './pages/NewPost';\nimport Login from './pages/Login'\nimport Navbar from './components/Navbar';\nimport Posts from './pages/Posts'\n\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    fetch(\"/me\")\n    .then((res) => {\n      if (res.ok) {\n        res.json()\n        .then((user) => setUser(user));\n      }\n    });\n  }, []);\n\n  if (!user) return <Login onLogin={setUser} />;\n\n  return (\n    <>\n    <Navbar user={user} setUser={setUser} />\n    <main>\n      <Switch>\n        <Route path=\"/new-post\">\n          <NewPost user={user} />\n        </Route>\n        <Route path=\"/\">\n          <Posts />\n        </Route>\n      </Switch>\n    </main>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}